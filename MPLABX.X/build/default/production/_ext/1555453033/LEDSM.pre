
# 1 "../src/PIC18/LEDSM.c"

# 4 "../src/PIC18/LEDSM.h"
typedef enum {
LED_START,
LED_OFF,
LED_ON
} LEDState;

typedef struct LEDData LEDData;
struct LEDData {
LEDState state;
unsigned long currentClock;
};

void initLed(LEDData *ledData);
void ledSM(LEDData *ledData);

# 16 "../src/PIC18/Blinky.h"
void shortDelay();
void configureLED();
void onLED();
void offLED();

# 9 "../src/PIC18/Clock.h"
extern volatile unsigned long clock;

void timer0Isr();
void initClock();
unsigned long getClock();
char hasTimer0Overflowed();
void clearTimer0Overflowed();

# 7 "../src/PIC18/LEDSM.c"
void initLed(LEDData *ledData) {
ledData->state = LED_START;
}

void ledSM(LEDData *ledData) {
switch(ledData->state) {
case LED_OFF:
if(getClock() - ledData->currentClock >= 488) {
onLED();
ledData->state = LED_ON;
ledData->currentClock = getClock();
} else {
ledData->state = LED_OFF;
}
break;

case LED_START:
ledData->currentClock = getClock();
configureLED();
ledData->state = LED_OFF;
break;

case LED_ON:
if(getClock() - ledData->currentClock >= 488) {
offLED();
ledData->state = LED_OFF;
ledData->currentClock = getClock();
} else {
ledData->state = LED_ON;
}
break;

default:

ledData->state = LED_START;
break;
}
}
